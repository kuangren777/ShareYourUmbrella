# Generated by Django 4.1.7 on 2023-12-04 14:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlarmType",
            fields=[
                (
                    "alarm_type_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="警报类型ID"
                    ),
                ),
                ("alarm_type", models.CharField(max_length=50, verbose_name="警报类型")),
            ],
            options={"verbose_name": "警报类型表", "verbose_name_plural": "警报类型表",},
        ),
        migrations.CreateModel(
            name="RepairType",
            fields=[
                (
                    "repair_type_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="维护类型ID"
                    ),
                ),
                ("repair_type", models.CharField(max_length=50, verbose_name="维护类型")),
            ],
            options={"verbose_name": "维修类型表", "verbose_name_plural": "维修类型表",},
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "site_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="站点ID"
                    ),
                ),
                ("site_address", models.CharField(max_length=50, verbose_name="站点地址")),
                (
                    "site_store_num",
                    models.IntegerField(blank=True, null=True, verbose_name="站点存放数量"),
                ),
            ],
            options={"verbose_name": "站点表", "verbose_name_plural": "站点表",},
        ),
        migrations.CreateModel(
            name="Umbrella",
            fields=[
                (
                    "umbrella_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="伞ID"
                    ),
                ),
                (
                    "umbrella_warehousing_date",
                    models.DateTimeField(verbose_name="入库日期"),
                ),
                ("umbrella_available", models.BooleanField(verbose_name="是否可用")),
                (
                    "umbrella_last_used_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="上次使用日期"),
                ),
                ("umbrella_cost_price", models.FloatField(verbose_name="伞成本价")),
            ],
            options={"verbose_name": "雨伞信息表", "verbose_name_plural": "雨伞信息表",},
        ),
        migrations.CreateModel(
            name="UmbrellaType",
            fields=[
                (
                    "umbrella_type_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="伞类型ID"
                    ),
                ),
                ("umbrella_type", models.CharField(max_length=50, verbose_name="伞类型")),
            ],
            options={"verbose_name": "雨伞类型表", "verbose_name_plural": "雨伞类型表",},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="用户ID"
                    ),
                ),
                (
                    "user_real_name",
                    models.CharField(max_length=50, unique=True, verbose_name="用户真实姓名"),
                ),
                ("user_number", models.CharField(max_length=50, verbose_name="用户学工号")),
                ("user_school", models.CharField(max_length=50, verbose_name="用户学校")),
                (
                    "user_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="用户账户余额",
                    ),
                ),
                (
                    "user_photo",
                    models.ImageField(
                        blank=True,
                        default="default_logo.jpg",
                        upload_to="upload/user_logo/",
                        verbose_name="头像",
                    ),
                ),
                (
                    "user_phone",
                    models.CharField(max_length=11, unique=True, verbose_name="用户手机号"),
                ),
                (
                    "user_last_login_date",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="用户上次登录时间"
                    ),
                ),
                (
                    "user_registration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="用户注册日期"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "user_umbrella_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="UmbrellaApp.umbrella",
                        verbose_name="用户目前使用的伞号",
                    ),
                ),
            ],
            options={"verbose_name": "用户信息表", "verbose_name_plural": "用户信息表",},
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.AddField(
            model_name="umbrella",
            name="umbrella_type_id",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="UmbrellaApp.umbrellatype",
                verbose_name="伞类型",
            ),
        ),
        migrations.CreateModel(
            name="SiteStorage",
            fields=[
                ("id", models.AutoField(default=1, primary_key=True, serialize=False)),
                ("site_id", models.CharField(max_length=20, verbose_name="站点ID")),
                ("lay_id", models.CharField(max_length=50, verbose_name="放置序号")),
                (
                    "umbrella_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="UmbrellaApp.umbrella",
                        verbose_name="伞ID",
                    ),
                ),
            ],
            options={"verbose_name": "站点存放表", "verbose_name_plural": "站点存放表",},
        ),
        migrations.CreateModel(
            name="Repair",
            fields=[
                (
                    "repair_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="维护ID"
                    ),
                ),
                ("notes", models.CharField(max_length=50, verbose_name="备注")),
                ("repair_time", models.DateTimeField(verbose_name="维护时间")),
                (
                    "repair_type_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="UmbrellaApp.repairtype",
                    ),
                ),
                (
                    "umbrella_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="UmbrellaApp.umbrella",
                    ),
                ),
            ],
            options={"verbose_name": "维修表", "verbose_name_plural": "维修表",},
        ),
        migrations.CreateModel(
            name="Recharge",
            fields=[
                (
                    "recharge_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="充值记录ID"
                    ),
                ),
                ("recharge_time", models.DateTimeField(verbose_name="充值时间")),
                ("recharge_amount", models.FloatField(verbose_name="充值金额")),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "充值表", "verbose_name_plural": "充值表",},
        ),
        migrations.CreateModel(
            name="Diary",
            fields=[
                (
                    "diary_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="日志ID"
                    ),
                ),
                (
                    "lending_lay_id",
                    models.CharField(max_length=50, verbose_name="借出详细序号"),
                ),
                ("lending_time", models.DateTimeField(verbose_name="借出时间")),
                (
                    "return_lay_id",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="归还详细序号"
                    ),
                ),
                (
                    "return_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="归还时间"),
                ),
                ("order_price", models.FloatField(verbose_name="本次费用")),
                (
                    "lending_site_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lending_site",
                        to="UmbrellaApp.site",
                        verbose_name="借出站点ID",
                    ),
                ),
                (
                    "return_site_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="return_site",
                        to="UmbrellaApp.site",
                        verbose_name="归还站点ID",
                    ),
                ),
                (
                    "umbrella_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="UmbrellaApp.umbrella",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "日志表", "verbose_name_plural": "日志表",},
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "coupon_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="优惠券ID"
                    ),
                ),
                ("coupon_type", models.CharField(max_length=50, verbose_name="优惠券类型")),
                ("discount_price", models.FloatField(verbose_name="折扣力度")),
                ("satisfied_amount", models.FloatField(verbose_name="满足金额")),
                ("effective_time", models.DateTimeField(verbose_name="生效时间")),
                ("expire_time", models.DateTimeField(verbose_name="失效时间")),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "优惠券表", "verbose_name_plural": "优惠券表",},
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "comment_content",
                    models.CharField(max_length=255, verbose_name="评论内容"),
                ),
                ("comment_score", models.FloatField(verbose_name="评价分数")),
                (
                    "diary_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="UmbrellaApp.diary",
                    ),
                ),
                (
                    "umbrella_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="UmbrellaApp.umbrella",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "评论表", "verbose_name_plural": "评论表",},
        ),
        migrations.CreateModel(
            name="Alarm",
            fields=[
                (
                    "alarm_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="警报ID"
                    ),
                ),
                ("alarm_available", models.BooleanField(verbose_name="是否报警")),
                (
                    "alarm_type_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="UmbrellaApp.alarmtype",
                    ),
                ),
                (
                    "umbrella_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="UmbrellaApp.umbrella",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "警报表", "verbose_name_plural": "警报表",},
        ),
    ]
